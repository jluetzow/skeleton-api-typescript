{"version":3,"file":"validators.js","sourceRoot":"","sources":["validators.ts"],"names":[],"mappings":";;AAAA,mDAAiE;AAEpD,QAAA,WAAW,GAAG,SAAS,CAAA;AACvB,QAAA,eAAe,GAAG,MAAM,CAAA;AACxB,QAAA,eAAe,GAAG,YAAY,CAAA;AAC9B,QAAA,YAAY,GAAG,UAAU,CAAA;AACzB,QAAA,YAAY,GAAG,UAAU,CAAA;AACzB,QAAA,WAAW,GAAG,SAAS,CAAA;AACvB,QAAA,iBAAiB,GAAG,cAAc,CAAA;AAClC,QAAA,yBAAyB,GAAG,qBAAqB,CAAA;AACjD,QAAA,cAAc,GAAG,SAAS,CAAA;AAC1B,QAAA,mBAAmB,GAAG,SAAS,CAAA;AAC/B,QAAA,UAAU,GAAG,QAAQ,CAAA;AACrB,QAAA,UAAU,GAAG,QAAQ,CAAA;AACrB,QAAA,aAAa,GAAG,UAAU,CAAA;AAC1B,QAAA,gBAAgB,GAAG,YAAY,CAAA;AAC/B,QAAA,wBAAwB,GAAG,qBAAqB,CAAA;AAChD,QAAA,iBAAiB,GAAG,MAAM,CAAA;AAC1B,QAAA,cAAc,GAAG,CAAC,CAAA;AAClB,QAAA,kBAAkB,GAAG,EAAE,CAAA;AACvB,QAAA,kBAAkB,GAAG,EAAE,CAAA;AAEvB,QAAA,YAAY,GAAG,CAAC,GAAQ,EAAE,GAAQ,EAAE,IAAS,EAAE,EAAE;IAC7D,MAAM,MAAM,GAAG,wBAAgB,CAAC,GAAG,CAAC,CAAA;IACpC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;QACtB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAA;KACtD;SAAM;QACN,IAAI,EAAE,CAAA;KACN;AACF,CAAC,CAAA;AAEY,QAAA,QAAQ,GAAG;IACvB,aAAK,CAAC,mBAAW,CAAC;SAChB,MAAM,EAAE;SACR,IAAI,EAAE;SACN,QAAQ,CAAC,EAAC,GAAG,EAAE,0BAAkB,EAAC,CAAC;IACrC,oBAAY;CACZ,CAAA;AACY,QAAA,OAAO,GAAG;IACtB,aAAK,CAAC,mBAAW,CAAC;SAChB,MAAM,EAAE;SACR,IAAI,EAAE;SACN,QAAQ,CAAC,EAAC,GAAG,EAAE,0BAAkB,EAAC,CAAC;IACrC,aAAK,CAAC,mBAAW,CAAC;SAChB,MAAM,EAAE;SACR,IAAI,EAAE;IACR,aAAK,CAAC,yBAAiB,CAAC;SACtB,MAAM,EAAE;SACR,IAAI,EAAE;IACR,aAAK,CAAC,iCAAyB,CAAC;SAC9B,MAAM,EAAE;SACR,IAAI,EAAE;IACR,oBAAY;CACZ,CAAA;AAEY,QAAA,aAAa,GAAG;IAC5B,aAAK,CAAC,mBAAW,CAAC;SAChB,MAAM,EAAE;SACR,IAAI,EAAE;IACR,aAAK,CAAC,mBAAW,CAAC;SAChB,MAAM,EAAE;SACR,IAAI,EAAE;IACR,aAAK,CAAC,yBAAiB,CAAC;SACtB,MAAM,EAAE;SACR,IAAI,EAAE;IACR,aAAK,CAAC,iCAAyB,CAAC;SAC9B,MAAM,EAAE;SACR,IAAI,EAAE;IACR,oBAAY;CACZ,CAAA;AAEY,QAAA,kBAAkB,GAAG;IACjC,aAAK,CAAC,mBAAW,CAAC;SAChB,MAAM,EAAE;SACR,IAAI,EAAE;SACN,QAAQ,CAAC,EAAC,GAAG,EAAE,0BAAkB,EAAC,CAAC;IACrC,aAAK,CAAC,qBAAa,CAAC;SAClB,MAAM,EAAE;IACV,oBAAY;CACZ,CAAA;AAEY,QAAA,0BAA0B,GAAG;IACzC,aAAK,CAAC,mBAAW,CAAC;SAChB,MAAM,EAAE;SACR,IAAI,EAAE;SACN,QAAQ,CAAC,EAAC,GAAG,EAAE,0BAAkB,EAAC,CAAC;IACrC,aAAK,CAAC,kBAAU,CAAC;SACf,MAAM,EAAE;IACV,aAAK,CAAC,sBAAc,CAAC;SACnB,MAAM,EAAE;SACR,IAAI,EAAE;IACR,oBAAY;CACZ,CAAA;AAGY,QAAA,cAAc,GAAG;IAC7B,aAAK,CAAC,2BAAmB,CAAC;SACxB,MAAM,EAAE;IACV,oBAAY;CACZ,CAAA;AAEY,QAAA,wBAAwB,GAAG;IACvC,aAAK,CAAC,kBAAU,CAAC;SACf,MAAM,EAAE;IACV,aAAK,CAAC,gCAAwB,CAAC;SAC7B,MAAM,EAAE;IACV,aAAK,CAAC,oBAAY,CAAC;SACjB,MAAM,EAAE;SACR,IAAI,EAAE;SACN,QAAQ,CAAC,EAAC,GAAG,EAAE,sBAAc,EAAC,CAAC;IACjC,oBAAY;CACZ,CAAA;AAEY,QAAA,oBAAoB,GAAG;IACnC,aAAK,CAAC,kBAAU,CAAC;SACf,MAAM,EAAE;IACV,aAAK,CAAC,oBAAY,CAAC;SACjB,MAAM,EAAE;SACR,IAAI,EAAE;SACN,QAAQ,CAAC,EAAC,GAAG,EAAE,sBAAc,EAAC,CAAC;IACjC,oBAAY;CACZ,CAAA;AAEY,QAAA,SAAS,GAAG;IACxB,aAAK,CAAC,oBAAY,CAAC;SACjB,MAAM,EAAE;SACR,IAAI,EAAE;IACR,oBAAY;CACZ,CAAA;AAEY,QAAA,SAAS,GAAG;IACxB,aAAK,CAAC,oBAAY,CAAC;SACjB,MAAM,EAAE;SACR,IAAI,EAAE;IACR,aAAK,CAAC,yBAAiB,CAAC;SACtB,MAAM,EAAE;IACV,oBAAY;CACZ,CAAA;AAEY,QAAA,WAAW,GAAG;IAC1B,aAAK,CAAC,uBAAe,CAAC;SACpB,MAAM,EAAE;SACR,IAAI,EAAE;SACN,cAAc,EAAE;SAChB,QAAQ,CAAC,EAAC,GAAG,EAAE,CAAC,EAAC,CAAC;IACpB,oBAAY;CACZ,CAAA;AAEY,QAAA,SAAS,GAAG;IACxB,aAAK,CAAC,oBAAY,CAAC;SACjB,IAAI,EAAE;SACN,QAAQ,CAAC,EAAC,GAAG,EAAE,sBAAc,EAAC,CAAC;IACjC,oBAAY;CACZ,CAAA","sourcesContent":["import { check, validationResult } from 'express-validator/check'\n\nexport const KEY_ADDRESS = 'address'\nexport const KEY_WALLET_NAME = 'name'\nexport const KEY_PRIVATE_KEY = 'privateKey'\nexport const KEY_PASSWORD = 'password'\nexport const KEY_QRSTRING = 'qrstring'\nexport const KEY_NETWORK = 'network'\nexport const KEY_CREATION_DATE = 'creationDate'\nexport const KEY_ENCRYPTED_PRIVATE_KEY = 'encryptedPrivateKey'\nexport const KEY_TX_MESSAGE = 'message'\nexport const KEY_MESSAGE_PAYLOAD = 'payload'\nexport const KEY_WALLET = 'wallet'\nexport const KEY_MOSAIC = 'mosaic'\nexport const KEY_MOSAIC_ID = 'mosaicId'\nexport const KEY_NEXT_PAGE_ID = 'nextPageId'\nexport const KEY_TRANSFER_TRANSACTION = 'transferTransaction'\nexport const KEY_QROBJECT_DATA = 'data'\nexport const KEY_PWD_LENGTH = 8\nexport const KEY_ADDRESS_LENGTH = 40\nexport const KEY_PRIVATE_LENGTH = 64\n\nexport const errorHandler = (req: any, res: any, next: any) => {\n\tconst errors = validationResult(req)\n\tif (!errors.isEmpty()) {\n\t\tres.status(409).json({message: errors.array()[0].msg})\n\t} else {\n\t\tnext()\n\t}\n}\n\nexport const vAddress = [\n\tcheck(KEY_ADDRESS)\n\t\t.exists()\n\t\t.trim()\n\t\t.isLength({min: KEY_ADDRESS_LENGTH}),\n\terrorHandler\n]\nexport const vWallet = [\n\tcheck(KEY_ADDRESS)\n\t\t.exists()\n\t\t.trim()\n\t\t.isLength({min: KEY_ADDRESS_LENGTH}),\n\tcheck(KEY_NETWORK)\n\t\t.exists()\n\t\t.trim(),\n\tcheck(KEY_CREATION_DATE)\n\t\t.exists()\n\t\t.trim(),\n\tcheck(KEY_ENCRYPTED_PRIVATE_KEY)\n\t\t.exists()\n\t\t.trim(),\n\terrorHandler\n]\n\nexport const vExportWallet = [\n\tcheck(KEY_ADDRESS)\n\t\t.exists()\n\t\t.trim(),\n\tcheck(KEY_NETWORK)\n\t\t.exists()\n\t\t.trim(),\n\tcheck(KEY_CREATION_DATE)\n\t\t.exists()\n\t\t.trim(),\n\tcheck(KEY_ENCRYPTED_PRIVATE_KEY)\n\t\t.exists()\n\t\t.trim(),\n\terrorHandler\n]\n\nexport const vFilterTransaction = [\n\tcheck(KEY_ADDRESS)\n\t\t.exists()\n\t\t.trim()\n\t\t.isLength({min: KEY_ADDRESS_LENGTH}),\n\tcheck(KEY_MOSAIC_ID)\n\t\t.exists(),\n\terrorHandler\n]\n\nexport const vCreateTransferTransaction = [\n\tcheck(KEY_ADDRESS)\n\t\t.exists()\n\t\t.trim()\n\t\t.isLength({min: KEY_ADDRESS_LENGTH}),\n\tcheck(KEY_MOSAIC)\n\t\t.exists(),\n\tcheck(KEY_TX_MESSAGE)\n\t\t.exists()\n\t\t.trim(),\n\terrorHandler\n]\n\n\nexport const vDecodeMessage = [\n\tcheck(KEY_MESSAGE_PAYLOAD)\n\t\t.exists(),\n\terrorHandler\n]\n\nexport const vSignTransferTransaction = [\n\tcheck(KEY_WALLET)\n\t\t.exists(),\n\tcheck(KEY_TRANSFER_TRANSACTION)\n\t\t.exists(),\n\tcheck(KEY_PASSWORD)\n\t\t.exists()\n\t\t.trim()\n\t\t.isLength({min: KEY_PWD_LENGTH}),\n\terrorHandler\n]\n\nexport const vEncryptedPrivateKey = [\n\tcheck(KEY_WALLET)\n\t\t.exists(),\n\tcheck(KEY_PASSWORD)\n\t\t.exists()\n\t\t.trim()\n\t\t.isLength({min: KEY_PWD_LENGTH}),\n\terrorHandler\n]\n\nexport const vQRString = [\n\tcheck(KEY_QRSTRING)\n\t\t.exists()\n\t\t.trim(),\n\terrorHandler\n]\n\nexport const vQRObject = [\n\tcheck(KEY_PASSWORD)\n\t\t.exists()\n\t\t.trim(),\n\tcheck(KEY_QROBJECT_DATA)\n\t\t.exists(),\n\terrorHandler\n]\n\nexport const vWalletName = [\n\tcheck(KEY_WALLET_NAME)\n\t\t.exists()\n\t\t.trim()\n\t\t.isAlphanumeric()\n\t\t.isLength({min: 1}),\n\terrorHandler\n]\n\nexport const vPassword = [\n\tcheck(KEY_PASSWORD)\n\t\t.trim()\n\t\t.isLength({min: KEY_PWD_LENGTH}),\n\terrorHandler\n]\n\n"]}